#include <stdio.h>
#include <locale.h>
#include <stdlib.h>
#include <windows.h>

//Primeira parte do trabalho
//Sofia Kitaeva e João Vitor Spala

typedef struct Jogada{
    int linhaDe, colunaDe, linhaPara, colunaPara;
}jogada;
void IniciaTabuleiro(int *p[9][9]){
   for(int i=1; i<9; i++){ //colocar peões
       *p[2][i]=1;
       *p[7][i]=-1;
   }
   
   for(int i=1; i<9; i++){ //coordenadas laterais do tabuleiro
        *p[i][0]=i;
        *p[0][i]=i;
   }
   
   for(int i=1; i<9; i++){ //peça brancas
        if(i==1 || i==8) //torres
            *p[1][i]=4;
        else if(i==2 || i==7) //cavalos
            *p[1][i]=2;
            else if(i==3 || i==6) //bispos
                *p[1][i]=3;
   }
   *p[1][4]=5; //rainha
   *p[1][5]=6; //rei
   
   for(int i=1; i<9; i++){ //todas as peças pretas
       *p[8][i]=(*p[1][i])*-1;
   }
}
void MostrarTabuleiro(int tab[9][9]){
    for(int i=0; i<9; i++){
        for(int j=0; j<9; j++){
            if(tab[i][j]<0)
                printf("%d ", tab[i][j]);
            else
                printf("%d  ", tab[i][j]);
        }
        printf("\n");
    }
}
int ChecarVencedor(int *tab[9][9]){
	int flag=0;
	for(int i=1;i<=8;i++){
		for(int j=1; j<=8;j++){
			if(*tab[i][j]==6)  flag+=6;
			if(*tab[i][j]==-6) flag+=-6;
		}
	}
	return flag;
}
void MovimentoPossivel(int *peca[9][9], jogada *possi[30], int i, int j){
	int c=0;
	int coluna=j;
	/*
	
	
	
	
	
	
	
	
	
	
	
	*/
	for(int x=0; x<30; x++){
        (*possi[x]).linhaDe=0;
        (*possi[x]).colunaDe=0;
        (*possi[x]).linhaPara=0;
        (*possi[x]).colunaPara=0;
    }
            if(*peca[i][j]==4){//se for torre branca
            	for(int x=i;x>=1;x--){//torre branca pra cima
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).colunaPara=j;
            		if(*peca[x][j]==0){
            			(*possi[c]).linhaPara=x;
            			c++;
            		}
            			else if(*peca[x][j]<0){
            				(*possi[c]).linhaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[x][j]>0) break;
				}
				for(int x=i; x<=8;x++){//torre branca pra baixo
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).colunaPara=j;
            		if(*peca[x][j]==0){
            			(*possi[c]).linhaPara=x;
            			c++;
            		}
            			else if(*peca[x][j]<0){
            				(*possi[c]).linhaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[x][j]>0) break;
				}
				for(int x=j; x>=1;x--){//torre branca pra esquerda
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).linhaPara=i;
            		if(*peca[i][x]==0){
            			(*possi[c]).colunaPara=x;
            			c++;
            		}
            			else if(*peca[i][x]<0){
            				(*possi[c]).colunaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[i][x]>0) break;
				}
				for(int x=j; x<=8;x++){//torre branca pra direita
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).linhaPara=i;
            		if(*peca[i][x]==0){
            			(*possi[c]).colunaPara=x;
            			c++;
            		}
            			else if(*peca[i][x]<0){
            				(*possi[c]).colunaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[i][x]>0) break;		
				} 	 		
    		}
    		if(*peca[i][j]==-4){//se for torre preta
            	for(int x=i;x>=1;x--){//torre preta pra cima
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).colunaPara=j;
            		if(*peca[x][j]==0){
            			(*possi[c]).linhaPara=x;
            			c++;
            		}
            			else if(*peca[x][j]>0){
            				(*possi[c]).linhaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[x][j]<0) break;
				}
				for(int x=i; x<=8;x++){//torre preta pra baixo
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).colunaPara=j;
            		if(*peca[x][j]==0){
            			(*possi[c]).linhaPara=x;
            			c++;
            		}
            			else if(*peca[x][j]>0){
            				(*possi[c]).linhaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[x][j]<0) break;
				}
				for(int x=j; x>=1;x--){//torre pra esquerda
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).linhaPara=i;
            		if(*peca[i][x]==0){
            			(*possi[c]).colunaPara=x;
            			c++;
            		}
            			else if(*peca[i][x]>0){
            				(*possi[c]).colunaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[i][x]<0) break;
				}
				for(int x=j; x<=8;x++){//torre pra direita
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).linhaPara=i;
            		if(*peca[i][x]==0){
            			(*possi[c]).colunaPara=x;
            			c++;
            		}
            			else if(*peca[i][x]>0){
            				(*possi[c]).colunaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[i][x]<0) break;		
				}
			}
			if(*peca[i][j]==3){//se for bispo branco
				for(int x=i;x>=1;x--){//bispo branco direita e cima
					(*possi[x]).linhaDe=i;
        			(*possi[x]).colunaDe=j;
        			if(coluna<=8 && *peca[x-1][coluna+1]==0){
        				(*possi[c]).linhaPara = x-1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
					}
					else if(coluna<=8 && *peca[x-1][coluna+1]<0){
						(*possi[c]).linhaPara = x-1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
        				break;
					}
					coluna++;
				}
				coluna=j;
				for(int x=i; x<=8; x++){//bispo branco direita e baixo
					(*possi[x]).linhaDe=i;
        			(*possi[x]).colunaDe=j;
        			if(coluna<=8 && *peca[x+1][coluna+1]==0){
        				(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
					}
					else if(coluna<=8 && *peca[x-1][coluna+1]<0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
        				break;
					}
					coluna++;
				}
				coluna=j;
				for(int x=i; x>=1; x--){//bispo branco esquerda e cima
					if(coluna>=1 && *peca[x-1][coluna-1]==0){
						(*possi[c]).linhaPara= x-1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
					}
					else if(coluna>=1 && *peca[x-1][coluna-1]<0){
						(*possi[c]).linhaPara= x-1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
        				break;
					}
				coluna--;
				}
				coluna=j;			
				for(int x=i;x<=8;x++){//bispo branco esquerda e baixo
					if(coluna>=1 && *peca[x+1][coluna-1]==0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
					}
					else if(coluna>=1 && *peca[x+1][coluna-1]<0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
        				break;
					}
				coluna--;
				}
			}
			if(*peca[i][j]==-3){//se for bispo preto
				for(int x=i;x>=1;x--){//bispo preto direita e cima
					(*possi[x]).linhaDe=i;
        			(*possi[x]).colunaDe=j;
        			if(coluna<=8 && *peca[x-1][coluna+1]==0){
        				(*possi[c]).linhaPara = x-1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
					}
					else if(coluna<=8 && *peca[x-1][coluna+1]>0){
						(*possi[c]).linhaPara = x-1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
        				break;
					}
					coluna++;
				}
				coluna=j;
				for(int x=i; x<=8; x++){//bispo preto direita e baixo
					(*possi[x]).linhaDe=i;
        			(*possi[x]).colunaDe=j;
        			if(coluna<=8 && *peca[x+1][coluna+1]==0){
        				(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
					}
					else if(coluna<=8 && *peca[x+1][coluna+1]>0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
        				break;
					}
					coluna++;
				}
				coluna=j;
				for(int x=i; x>=1; x--){//bispo preto esquerda e cima
					if(coluna>=1 && *peca[x-1][coluna-1]==0){
						(*possi[c]).linhaPara= x-1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
					}
					else if(coluna>=1 && *peca[x-1][coluna-1]>0){
						(*possi[c]).linhaPara= x-1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
        				break;
					}
				coluna--;
				}
				coluna=j;			
				for(int x=i;x<=8;x++){//bispo preto esquerda e baixo
					if(coluna>=1 && *peca[x+1][coluna-1]==0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
					}
					else if(coluna>=1 && *peca[x+1][coluna-1]>0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
        				break;
					}
				coluna--;
				}
			}
			if(*peca[i][j]==5){//se for rainha branca
				    for(int x=i;x>=1;x--){//torre branca pra cima
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).colunaPara=j;
            		if(*peca[x][j]==0){
            			(*possi[c]).linhaPara=x;
            			c++;
            		}
            			else if(*peca[x][j]<0){
            				(*possi[c]).linhaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[x][j]>0) break;
				}
				for(int x=i; x<=8;x++){//torre branca pra baixo
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).colunaPara=j;
            		if(*peca[x][j]==0){
            			(*possi[c]).linhaPara=x;
            			c++;
            		}
            			else if(*peca[x][j]<0){
            				(*possi[c]).linhaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[x][j]>0) break;
				}
				for(int x=j; x>=1;x--){//torre branca pra esquerda
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).linhaPara=i;
            		if(*peca[i][x]==0){
            			(*possi[c]).colunaPara=x;
            			c++;
            		}
            			else if(*peca[i][x]<0){
            				(*possi[c]).colunaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[i][x]>0) break;
				}
				for(int x=j; x<=8;x++){//torre branca pra direita
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).linhaPara=i;
            		if(*peca[i][x]==0){
            			(*possi[c]).colunaPara=x;
            			c++;
            		}
            			else if(*peca[i][x]<0){
            				(*possi[c]).colunaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[i][x]>0) break;		
				} 	 		
    			for(int x=i;x>=1;x--){//bispo branco direita e cima
					(*possi[x]).linhaDe=i;
        			(*possi[x]).colunaDe=j;
        			if(coluna<=8 && *peca[x-1][coluna+1]==0){
        				(*possi[c]).linhaPara = x-1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
					}
					else if(coluna<=8 && *peca[x-1][coluna+1]<0){
						(*possi[c]).linhaPara = x-1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
        				break;
					}
					coluna++;
				}
				coluna=j;
				for(int x=i; x<=8; x++){//bispo branco direita e baixo
					(*possi[x]).linhaDe=i;
        			(*possi[x]).colunaDe=j;
        			if(coluna<=8 && *peca[x+1][coluna+1]==0){
        				(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
					}
					else if(coluna<=8 && *peca[x-1][coluna+1]<0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
        				break;
					}
					coluna++;
				}
				coluna=j;
				for(int x=i; x>=1; x--){//bispo branco esquerda e cima
					if(coluna>=1 && *peca[x-1][coluna-1]==0){
						(*possi[c]).linhaPara= x-1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
					}
					else if(coluna>=1 && *peca[x-1][coluna-1]<0){
						(*possi[c]).linhaPara= x-1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
        				break;
					}
				coluna--;
				}
				coluna=j;			
				for(int x=i;x<=8;x++){//bispo branco esquerda e baixo
					if(coluna>=1 && *peca[x+1][coluna-1]==0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
					}
					else if(coluna>=1 && *peca[x+1][coluna-1]<0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
        				break;
					}
				coluna--;
				}
			}
			if(*peca[i][j]==-5){//se for rainha preta
				for(int x=i;x>=1;x--){//torre preta pra cima
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).colunaPara=j;
            		if(*peca[x][j]==0){
            			(*possi[c]).linhaPara=x;
            			c++;
            		}
            			else if(*peca[x][j]>0){
            				(*possi[c]).linhaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[x][j]<0) break;
				}
				for(int x=i; x<=8;x++){//torre preta pra baixo
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).colunaPara=j;
            		if(*peca[x][j]==0){
            			(*possi[c]).linhaPara=x;
            			c++;
            		}
            			else if(*peca[x][j]>0){
            				(*possi[c]).linhaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[x][j]<0) break;
				}
				for(int x=j; x>=1;x--){//torre pra esquerda
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).linhaPara=i;
            		if(*peca[i][x]==0){
            			(*possi[c]).colunaPara=x;
            			c++;
            		}
            			else if(*peca[i][x]>0){
            				(*possi[c]).colunaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[i][x]<0) break;
				}
				for(int x=j; x<=8;x++){//torre pra direita
					(*possi[c]).linhaDe=i;
            		(*possi[c]).colunaDe=j;
            		(*possi[c]).linhaPara=i;
            		if(*peca[i][x]==0){
            			(*possi[c]).colunaPara=x;
            			c++;
            		}
            			else if(*peca[i][x]>0){
            				(*possi[c]).colunaPara=x;
            				c++;
            				break;
						}
						//else if(*peca[i][x]<0) break;		
				}
			for(int x=i;x>=1;x--){//bispo preto direita e cima
					(*possi[x]).linhaDe=i;
        			(*possi[x]).colunaDe=j;
        			if(coluna<=8 && *peca[x-1][coluna+1]==0){
        				(*possi[c]).linhaPara = x-1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
					}
					else if(coluna<=8 && *peca[x-1][coluna+1]>0){
						(*possi[c]).linhaPara = x-1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
        				break;
					}
					coluna++;
				}
				coluna=j;
				for(int x=i; x<=8; x++){//bispo preto direita e baixo
					(*possi[x]).linhaDe=i;
        			(*possi[x]).colunaDe=j;
        			if(coluna<=8 && *peca[x+1][coluna+1]==0){
        				(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
					}
					else if(coluna<=8 && *peca[x-1][coluna+1]>0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna+1;
        				c++;
        				break;
					}
					coluna++;
				}
				coluna=j;
				for(int x=i; x>=1; x--){//bispo preto esquerda e cima
					if(coluna>=1 && *peca[x-1][coluna-1]==0){
						(*possi[c]).linhaPara= x-1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
					}
					else if(coluna>=1 && *peca[x-1][coluna-1]>0){
						(*possi[c]).linhaPara= x-1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
        				break;
					}
				coluna--;
				}
				coluna=j;			
				for(int x=i;x<=8;x++){//bispo preto esquerda e baixo
					if(coluna>=1 && *peca[x+1][coluna-1]==0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
					}
					else if(coluna>=1 && *peca[x+1][coluna-1]>0){
						(*possi[c]).linhaPara= x+1;
        				(*possi[c]).colunaPara= coluna-1;
        				c++;
        				break;
					}
				coluna--;
				}
			}			
		}
void EscolherMovimento(int *tab[9][9], jogada *possiveis[30], int i, int j, int item){
	int peca= *tab[i][j];
	*tab[i][j]=0;
	*tab[(*possiveis[item]).linhaPara][(*possiveis[item]).colunaPara]= peca;
	
}		
int main(){
	setlocale(LC_ALL, "Portuguese");
    int tabuleiro[9][9];
    int *pT[9][9];
    int item;
    int i, j;
    int flag;
    
    for(int i=0; i<9; i++){ //zerar tabuleiro
        for(int j=0; j<9; j++){
            tabuleiro[i][j]=0;
            pT[i][j]=&tabuleiro[i][j]; //associar cada casa da matriz a um ponteiro
        }
    }
    
    IniciaTabuleiro(pT); //passa matriz por ponteiro
    
    MostrarTabuleiro(tabuleiro);
    
    jogada possiveis[30];
    jogada *pP[30];
    
    for(int i=0; i<30; i++){
        pP[i]=&possiveis[i];
    }
    
	do{
        flag= ChecarVencedor(pT);
        if(flag!=0) break; 
        printf("Insira as coordenadas da peça que deseja movimentar\n");
        scanf("%d", &i);
        scanf("%d", &j);
        if(tabuleiro[i][j]==0 || i==0 || j==0){
            printf("Coordenadas inválidas\n");
        }
        else{
            MovimentoPossivel(pT, pP, i, j);
            for(int x=0; x<30;x++){//impedir que a propria coordenada fornecida seja uma jogada possivel
        	if(possiveis[x].linhaPara == i && possiveis[x].colunaPara == j){
        		possiveis[x].colunaPara=0;
        		possiveis[x].linhaPara=0;
			}
		}
			for(int x=0; x<30;x++){//printar as possibilidades
			if(possiveis[0].linhaPara==0 && possiveis[0].colunaPara==0) break;
			if(possiveis[x].linhaPara!=0 && possiveis[x].colunaPara!=0){
				printf("%d- ",x);
				printf("%d ",possiveis[x].linhaPara);
				printf("%d \n",possiveis[x].colunaPara);
			}
		}
            printf("Para qual das coordenadas possiveis deseja mover a peça? escolha um item\n");
			scanf("%d",&item);
			EscolherMovimento(pT, pP, i, j, item);
			Sleep(2000);
			system("cls");
			MostrarTabuleiro(tabuleiro);
        }  
	 } while(flag==0);
    if(flag==6) printf("Parabéns! As brancas venceram!\n");
    if(flag==-6) printf("Parabéns! As pretas venceram!\n");
    //system("pause");
    return 0;
}
